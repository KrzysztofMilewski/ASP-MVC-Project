@{
    ViewBag.Title = "MyPosts";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4 class="display-4">My Posts</h4>
<hr />

<div id="js-load-posts">

</div>

@section scripts
{
    <script src="~/Scripts/jsrender.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>

    <script type="text/x-jsrender" id="comment-template">
        <div class="container py-1 my-1" data-comment-id="{{:id}}" data-user-id="{{:commentingUser.id}}" style="border: 1px solid black">
            <div class="row mx-0">
                <div class="col">
                    <span><strong>{{:commentingUser.nickname}}</strong></span>
                    <p class="my-0">{{:contents}}</p>
                </div>
            </div>
        </div>
    </script>

    <script type="text/x-jsrender" id="post-template">
        <div data-post-id="{{:id}}" data-publisher-id="{{:publisher.id}}" class="container js-post-container mb-3 pb-3" style="border: 1px solid black">
            <div class="row mx-0 mt-3">
                <div class="col pl-0 d-flex">
                    <h4 class="my-auto">{{:title}}</h4>
                </div>
                <div class="col">
                    <span class="float-right">Published by: <strong>{{:publisher.nickname}}</strong></span> <br />
                    <span class="float-right">{{:datePublished}}</span>
                </div>

                {{if publisher.id == "@ViewBag.Id"}}
                <div class="col-1 m-0 p-0 d-flex">
                    <span class="js-edit-post my-auto mx-auto clickable" data-toggle="tooltip" title="Edit">
                        <i class="far fa-edit text-primary"></i>
                    </span>
                    <span class="js-delete-post my-auto mx-auto clickable" data-toggle="tooltip" title="Delete">
                        <i class="far fa-trash-alt text-danger"></i>
                    </span>
                </div>
                {{/if}}

            </div>
            <hr />
            <p>
                {{:contents}}
            </p>

            {{if numberOfEdits!=0}}
            <hr />
            <p><i class="font-weight-light">Edited {{:numberOfEdits}} times, last modification: {{:lastTimeEdited}}</i></p>
            {{/if}}

            <hr />
            <div class="row mx-0 justify-content-center">
                <div class="col-4 text-center">
                    <h5>Discussion</h5>
                </div>
            </div>

            <div class="comment-section">

            </div>

            <div class="row mx-0 justify-content-center">
                <div class="col-4">
                    <form id="add-comment-to-{{:id}}">
                        <div class="input-group">
                            <input type="text" name="contents" placeholder="Add comment..." class="form-control" />
                            <div class="input-group-append">
                                <button type="submit" class="btn btn-primary js-add-comment">Add</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </script>

    <script>
        $(document).ready(function () {



            $.ajax({
                url: "/api/posts/11",
                method: "GET",
                success: function (posts) {
                    $.each(posts, function (index, postDto) {
                        postDto.datePublished = moment(postDto.datePublished).format("D MMM YYYY, HH:mm");
                        if (typeof postDto.lastTimeEdited !== "undefined")
                            postDto.lastTimeEdited = moment(postDto.lastTimeEdited).format("D MMM YYYY, HH:mm");

                        var postHtml = $.templates("#post-template");

                        $("#js-load-posts").append(postHtml.render(postDto)).find('[data-toggle="tooltip"]').tooltip();

                        $.ajax({
                            url: "/api/comments/" + postDto.id,
                            method: "GET",
                            success: function (comments) {
                                var commentsHtml = $.templates("#comment-template");
                                var postContainer = $(".js-post-container[data-post-id='" + postDto.id + "']");
                                var commentSection = postContainer.find(".comment-section");
                                commentSection.append(commentsHtml.render(comments));


                                $("#add-comment-to-" + postDto.id).validate({
                                    rules: {
                                        contents: {
                                            required: true
                                        }
                                    },
                                    messages: {
                                        contents: {
                                            required: "This field cannot be empty!"
                                        }
                                    },
                                    submitHandler: function (form) {
                                        var formId = $(form).attr("id");
                                        var id = formId.slice(formId.lastIndexOf("-") + 1);

                                        var commentDto = {
                                            contents: $(form).find("input").val(),
                                            postId: id
                                        };

                                        $.ajax({
                                            url: "/api/comments",
                                            method: "POST",
                                            data: commentDto,
                                            success: function (returnedComment) {
                                                returnedComment.commentingUser = {
                                                    id: "@ViewBag.Id",
                                                    nickname: "@ViewBag.Nickname"
                                                };

                                                var commentTemplate = $("#comment-template");
                                                var commentSection = $(".js-post-container[data-post-id='" + id + "']").find(".comment-section");
                                                commentSection.append(commentTemplate.render(returnedComment)).children().last().hide().fadeIn();
                                            }
                                        });
                                    }
                                });
                            }
                        });
                    });
                }
            });

            $("#js-load-posts").on("click", "span.js-edit-post", function () {
                var postContainer = $(this).parents(".js-post-container");
                var postId = postContainer.attr("data-post-id");

                window.location.href = "/Posts/EditPost/" + postId;
            });

            $("#js-load-posts").on("click", "span.js-delete-post", function () {
                var postContainer = $(this).parents(".js-post-container");
                var postId = postContainer.attr("data-post-id");

                bootbox.confirm({
                    message: "Are you sure you want to delete this post? This operation cannot be undone",
                    buttons: {
                        confirm: {
                            label: "Delete",
                            className: "btn btn-danger"
                        },
                        cancel: {
                            label: "Cancel",
                            className: "btn btn-light"
                        },                      
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: "/api/posts/" + postId,
                                method: "DELETE",
                                success: function () {
                                    toastr.options = {
                                        progressBar: true,
                                        positionClass: "toast-bottom-full-width",
                                        timeOut: 3000,
                                    };
                                    toastr.success("Post successfully deleted");
                                    postContainer.fadeOut(1000, function () {
                                        $(this).remove();
                                    });
                                },
                                error: function() {
                                    toastr.options = {
                                        progressBar: true,
                                        positionClass: "toast-bottom-full-width",
                                        timeOut: 3000,
                                    };
                                    toastr.error("Couldn't delete this post");
                                }
                            });
                        }
                    }
                });
            });

        });
    </script>
}