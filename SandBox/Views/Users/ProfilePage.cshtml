@model SandBox.ViewModels.ProfilePageViewModel
@{
    ViewBag.Title = "ProfilePage";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Id = Model.CurrentUserId;
}

<div class="modal fade" tabindex="-1" role="dialog" id="modal-recommended-publishers">
    <div class="modal-dialog modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">This user has subscribed:</h5>
                <button type="button" class="close text-danger" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="subcriptions-recommendations" class="d-flex align-content-start flex-wrap">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="modal-send-message" data-backdrop="static">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Send message</h5>
                <button type="button" class="close text-danger" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="send-message">
                    <input name="title" type="text" placeholder="Title" class="form-control my-2" />
                    <textarea name="message" placeholder="Enter the message..." class="form-control my-2"></textarea>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" name="confirmation-check" id="confirmation-check"/>
                        <label class="form-check-label" for="confirmation-check">Require confirmation</label>
                    </div>
                    <button type="submit" class="btn btn-primary mt-2">Send</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="mx-0">
    <div class="d-flex">
        @if (Model.UserDto.ImageMimeType == null || Model.UserDto.ImageData == null)
        {
            <img src="~/Content/Images/default-profile-picture.png" class="profile-page-profile-picture" />
        }
        else
        {
            <img src="data:@Model.UserDto.ImageMimeType;base64,@System.Convert.ToBase64String(Model.UserDto.ImageData)" class="profile-page-profile-picture" />
        }
        <h4 class="display-4 ml-3 mt-auto mb-0">@Model.UserDto.Nickname</h4>

        <div class="d-flex flex-column ml-auto">
            <span class="badge badge-info invisible mt-auto mb-2 ml-auto p-2" id="followers-count"></span>


            @if (Model.CurrentUserId != Model.UserDto.Id)
            {
                <button type="button"
                        class="btn @Model.ButtonClass btn-lg js-toggle-subscription mb-2"
                        data-subscription-state="@(Model.IsCurrentSubscribed?"subscribed":"unsubscribed")">
                    @Model.ButtonContent
                </button>

                <button class="btn btn-primary mt-2 order-3" data-toggle="modal" data-target="#modal-send-message">
                    <i class="fas fa-envelope mr-2"></i>
                    Send message
                </button>
            }
            <div class="m-0 p-0" id="recommendations-info" data-toggle="tooltip" data-placement="left" title="Click to see who this user has subscribed">
                <button class="btn btn-primary w-100" id="recommended-publishers" data-toggle="modal" data-target="#modal-recommended-publishers">
                    Recommended <br />publishers
                </button>
            </div>

        </div>

    </div>
    <hr />

    <h4>Recent activity</h4>
    <div id="js-load-posts">

    </div>
</div>

@section scripts
{

    <script src="~/Scripts/jsrender.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
    <script src="~/Scripts/app/postsFunctions.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>

    @Html.Partial("_commentPopoverTemplate")
    @Html.Partial("_commentTemplate")
    @Html.Partial("_postTemplate")
    @Html.Partial("_simpleUserBadgeTemplate")


    <script>

        $(document).ready(function () {

            var modalWithPublishersShown = false;


            loadPosts("@Model.UserDto.Id");

            addCommentOptions();

            var recommendationsInfo = $("#recommendations-info");

            $.ajax({
                url: "/api/followers/" + "@Model.UserDto.Id",
                method: "GET",
                success: function (response) {
                    $("#followers-count").html(response + " follower(s)").removeClass("invisible");
                }
            });

            $(".js-toggle-subscription").on("click", function () {
                toggleSubscription($(this));
            });

            recommendationsInfo.tooltip({trigger:"hover"});
            var recommendationsField = $("#subcriptions-recommendations");
            $("#modal-recommended-publishers").on("shown.bs.modal", function () {

                if (!modalWithPublishersShown) {
                    $.ajax({
                        type: "GET",
                        url: "/api/publishers/" + "@Model.UserDto.Id",
                        dataType: "json",
                        success: function (response) {

                            if (response.length == 0)
                                recommendationsField.html("This user either hasn't subscribed anyone, or does not share information about subscriptions");
                            else {
                                var userTemplate = $.templates("#simple-user-badge");
                                recommendationsField.append(userTemplate.render(response).replace(/w-25/g, "w-50"));
                            }
                        }
                    });
                    modalWithPublishersShown = true;
                }

            });

            $("#send-message").validate({
                rules: {
                    title: {
                        required: true,
                        minlength: 5
                    },
                    message: "required"
                },
                submitHandler: function (form) {
                    $.ajax({
                        url: "/api/emailmessages",
                        method: "POST",
                        data: {
                            title: $(form).find("[name='title']").val(),
                            message: $(form).find("[name='message']").val(),
                            requestDeliveryNote: $(form).find("[name='confirmation-check']").prop("checked"),
                            receiver: {
                                id: "@Model.UserDto.Id"
                            }
                        },
                        success: function (response) {
                            $("#modal-send-message").modal("hide");
                            toastr.options = {
                                progressBar: true,
                                positionClass: "toast-bottom-full-width",
                                timeOut: 3000,
                            };
                            toastr.success(response);
                        }
                    });
                }
            });

            $("#modal-send-message").on("hide.bs.modal", function () {
                var form = $(this).find("form");
                $(form).find("input[type='text'], textarea").val("");
                $(form).find("input[type='checkbox']").prop("checked", false);
            });
        });

        addEditCommentHandler();
        addDeleteCommentHandler();



        function toggleSubscription(button) {
            var userId = "@Model.UserDto.Id";

            if (button.attr("data-subscription-state") === "subscribed") {
                $.ajax({
                    type: "DELETE",
                    url: "/api/subscriptions/" + userId,
                    dataType: "json",
                    success: function (data) {
                        location.reload();
                    }
                });
            }
            else {
                $.ajax({
                    type: "POST",
                    url: "/api/subscriptions/" + userId,
                    dataType: "json",
                    success: function (data) {
                        location.reload();
                    }
                });
            }
        }


    </script>
}

